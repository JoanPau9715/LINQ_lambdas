#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Application1
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BUSINESS")]
	public partial class BusinessClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertB_CUSTOMER(B_CUSTOMER instance);
    partial void UpdateB_CUSTOMER(B_CUSTOMER instance);
    partial void DeleteB_CUSTOMER(B_CUSTOMER instance);
    partial void InsertB_SALE(B_SALE instance);
    partial void UpdateB_SALE(B_SALE instance);
    partial void DeleteB_SALE(B_SALE instance);
    partial void InsertB_PRODUCT(B_PRODUCT instance);
    partial void UpdateB_PRODUCT(B_PRODUCT instance);
    partial void DeleteB_PRODUCT(B_PRODUCT instance);
    partial void InsertB_PROVIDER(B_PROVIDER instance);
    partial void UpdateB_PROVIDER(B_PROVIDER instance);
    partial void DeleteB_PROVIDER(B_PROVIDER instance);
    partial void InsertB_PROVIDERS_PRODUCT(B_PROVIDERS_PRODUCT instance);
    partial void UpdateB_PROVIDERS_PRODUCT(B_PROVIDERS_PRODUCT instance);
    partial void DeleteB_PROVIDERS_PRODUCT(B_PROVIDERS_PRODUCT instance);
    #endregion
		
		public BusinessClassesDataContext() : 
				base(global::Application1.Properties.Settings.Default.BUSINESSConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BusinessClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BusinessClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BusinessClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BusinessClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<B_CUSTOMER> B_CUSTOMERs
		{
			get
			{
				return this.GetTable<B_CUSTOMER>();
			}
		}
		
		public System.Data.Linq.Table<B_SALE> B_SALEs
		{
			get
			{
				return this.GetTable<B_SALE>();
			}
		}
		
		public System.Data.Linq.Table<B_PRODUCT> B_PRODUCTs
		{
			get
			{
				return this.GetTable<B_PRODUCT>();
			}
		}
		
		public System.Data.Linq.Table<B_PROVIDER> B_PROVIDERs
		{
			get
			{
				return this.GetTable<B_PROVIDER>();
			}
		}
		
		public System.Data.Linq.Table<B_PROVIDERS_PRODUCT> B_PROVIDERS_PRODUCTs
		{
			get
			{
				return this.GetTable<B_PROVIDERS_PRODUCT>();
			}
		}
		
		public System.Data.Linq.Table<B_SALE_DATA> B_SALE_DATAs
		{
			get
			{
				return this.GetTable<B_SALE_DATA>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.B_CUSTOMERS")]
	public partial class B_CUSTOMER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdCustomer;
		
		private string _FirstName;
		
		private string _LastName;
		
		private EntitySet<B_SALE> _B_SALEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdCustomerChanging(int value);
    partial void OnIdCustomerChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    #endregion
		
		public B_CUSTOMER()
		{
			this._B_SALEs = new EntitySet<B_SALE>(new Action<B_SALE>(this.attach_B_SALEs), new Action<B_SALE>(this.detach_B_SALEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCustomer", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdCustomer
		{
			get
			{
				return this._IdCustomer;
			}
			set
			{
				if ((this._IdCustomer != value))
				{
					this.OnIdCustomerChanging(value);
					this.SendPropertyChanging();
					this._IdCustomer = value;
					this.SendPropertyChanged("IdCustomer");
					this.OnIdCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_CUSTOMER_B_SALE", Storage="_B_SALEs", ThisKey="IdCustomer", OtherKey="IdCustomer")]
		public EntitySet<B_SALE> B_SALEs
		{
			get
			{
				return this._B_SALEs;
			}
			set
			{
				this._B_SALEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_B_SALEs(B_SALE entity)
		{
			this.SendPropertyChanging();
			entity.B_CUSTOMER = this;
		}
		
		private void detach_B_SALEs(B_SALE entity)
		{
			this.SendPropertyChanging();
			entity.B_CUSTOMER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.B_SALES")]
	public partial class B_SALE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdSale;
		
		private int _IdCustomer;
		
		private int _IdProduct;
		
		private int _Cuantity;
		
		private decimal _Price;
		
		private EntityRef<B_CUSTOMER> _B_CUSTOMER;
		
		private EntityRef<B_PRODUCT> _B_PRODUCT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdSaleChanging(int value);
    partial void OnIdSaleChanged();
    partial void OnIdCustomerChanging(int value);
    partial void OnIdCustomerChanged();
    partial void OnIdProductChanging(int value);
    partial void OnIdProductChanged();
    partial void OnCuantityChanging(int value);
    partial void OnCuantityChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    #endregion
		
		public B_SALE()
		{
			this._B_CUSTOMER = default(EntityRef<B_CUSTOMER>);
			this._B_PRODUCT = default(EntityRef<B_PRODUCT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSale", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdSale
		{
			get
			{
				return this._IdSale;
			}
			set
			{
				if ((this._IdSale != value))
				{
					this.OnIdSaleChanging(value);
					this.SendPropertyChanging();
					this._IdSale = value;
					this.SendPropertyChanged("IdSale");
					this.OnIdSaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCustomer", DbType="Int NOT NULL")]
		public int IdCustomer
		{
			get
			{
				return this._IdCustomer;
			}
			set
			{
				if ((this._IdCustomer != value))
				{
					if (this._B_CUSTOMER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCustomerChanging(value);
					this.SendPropertyChanging();
					this._IdCustomer = value;
					this.SendPropertyChanged("IdCustomer");
					this.OnIdCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProduct", DbType="Int NOT NULL")]
		public int IdProduct
		{
			get
			{
				return this._IdProduct;
			}
			set
			{
				if ((this._IdProduct != value))
				{
					if (this._B_PRODUCT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdProductChanging(value);
					this.SendPropertyChanging();
					this._IdProduct = value;
					this.SendPropertyChanged("IdProduct");
					this.OnIdProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cuantity", DbType="Int NOT NULL")]
		public int Cuantity
		{
			get
			{
				return this._Cuantity;
			}
			set
			{
				if ((this._Cuantity != value))
				{
					this.OnCuantityChanging(value);
					this.SendPropertyChanging();
					this._Cuantity = value;
					this.SendPropertyChanged("Cuantity");
					this.OnCuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_CUSTOMER_B_SALE", Storage="_B_CUSTOMER", ThisKey="IdCustomer", OtherKey="IdCustomer", IsForeignKey=true)]
		public B_CUSTOMER B_CUSTOMER
		{
			get
			{
				return this._B_CUSTOMER.Entity;
			}
			set
			{
				B_CUSTOMER previousValue = this._B_CUSTOMER.Entity;
				if (((previousValue != value) 
							|| (this._B_CUSTOMER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._B_CUSTOMER.Entity = null;
						previousValue.B_SALEs.Remove(this);
					}
					this._B_CUSTOMER.Entity = value;
					if ((value != null))
					{
						value.B_SALEs.Add(this);
						this._IdCustomer = value.IdCustomer;
					}
					else
					{
						this._IdCustomer = default(int);
					}
					this.SendPropertyChanged("B_CUSTOMER");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_PRODUCT_B_SALE", Storage="_B_PRODUCT", ThisKey="IdProduct", OtherKey="IdProduct", IsForeignKey=true)]
		public B_PRODUCT B_PRODUCT
		{
			get
			{
				return this._B_PRODUCT.Entity;
			}
			set
			{
				B_PRODUCT previousValue = this._B_PRODUCT.Entity;
				if (((previousValue != value) 
							|| (this._B_PRODUCT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._B_PRODUCT.Entity = null;
						previousValue.B_SALEs.Remove(this);
					}
					this._B_PRODUCT.Entity = value;
					if ((value != null))
					{
						value.B_SALEs.Add(this);
						this._IdProduct = value.IdProduct;
					}
					else
					{
						this._IdProduct = default(int);
					}
					this.SendPropertyChanged("B_PRODUCT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.B_PRODUCTS")]
	public partial class B_PRODUCT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdProduct;
		
		private string _Description;
		
		private EntitySet<B_SALE> _B_SALEs;
		
		private EntitySet<B_PROVIDERS_PRODUCT> _B_PROVIDERS_PRODUCTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdProductChanging(int value);
    partial void OnIdProductChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public B_PRODUCT()
		{
			this._B_SALEs = new EntitySet<B_SALE>(new Action<B_SALE>(this.attach_B_SALEs), new Action<B_SALE>(this.detach_B_SALEs));
			this._B_PROVIDERS_PRODUCTs = new EntitySet<B_PROVIDERS_PRODUCT>(new Action<B_PROVIDERS_PRODUCT>(this.attach_B_PROVIDERS_PRODUCTs), new Action<B_PROVIDERS_PRODUCT>(this.detach_B_PROVIDERS_PRODUCTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProduct", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdProduct
		{
			get
			{
				return this._IdProduct;
			}
			set
			{
				if ((this._IdProduct != value))
				{
					this.OnIdProductChanging(value);
					this.SendPropertyChanging();
					this._IdProduct = value;
					this.SendPropertyChanged("IdProduct");
					this.OnIdProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_PRODUCT_B_SALE", Storage="_B_SALEs", ThisKey="IdProduct", OtherKey="IdProduct")]
		public EntitySet<B_SALE> B_SALEs
		{
			get
			{
				return this._B_SALEs;
			}
			set
			{
				this._B_SALEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_PRODUCT_B_PROVIDERS_PRODUCT", Storage="_B_PROVIDERS_PRODUCTs", ThisKey="IdProduct", OtherKey="IdProduct")]
		public EntitySet<B_PROVIDERS_PRODUCT> B_PROVIDERS_PRODUCTs
		{
			get
			{
				return this._B_PROVIDERS_PRODUCTs;
			}
			set
			{
				this._B_PROVIDERS_PRODUCTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_B_SALEs(B_SALE entity)
		{
			this.SendPropertyChanging();
			entity.B_PRODUCT = this;
		}
		
		private void detach_B_SALEs(B_SALE entity)
		{
			this.SendPropertyChanging();
			entity.B_PRODUCT = null;
		}
		
		private void attach_B_PROVIDERS_PRODUCTs(B_PROVIDERS_PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.B_PRODUCT = this;
		}
		
		private void detach_B_PROVIDERS_PRODUCTs(B_PROVIDERS_PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.B_PRODUCT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.B_PROVIDERS")]
	public partial class B_PROVIDER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdProvider;
		
		private string _Name;
		
		private string _Telephone;
		
		private string _EMail;
		
		private EntitySet<B_PROVIDERS_PRODUCT> _B_PROVIDERS_PRODUCTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdProviderChanging(int value);
    partial void OnIdProviderChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnEMailChanging(string value);
    partial void OnEMailChanged();
    #endregion
		
		public B_PROVIDER()
		{
			this._B_PROVIDERS_PRODUCTs = new EntitySet<B_PROVIDERS_PRODUCT>(new Action<B_PROVIDERS_PRODUCT>(this.attach_B_PROVIDERS_PRODUCTs), new Action<B_PROVIDERS_PRODUCT>(this.detach_B_PROVIDERS_PRODUCTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProvider", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdProvider
		{
			get
			{
				return this._IdProvider;
			}
			set
			{
				if ((this._IdProvider != value))
				{
					this.OnIdProviderChanging(value);
					this.SendPropertyChanging();
					this._IdProvider = value;
					this.SendPropertyChanged("IdProvider");
					this.OnIdProviderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMail", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EMail
		{
			get
			{
				return this._EMail;
			}
			set
			{
				if ((this._EMail != value))
				{
					this.OnEMailChanging(value);
					this.SendPropertyChanging();
					this._EMail = value;
					this.SendPropertyChanged("EMail");
					this.OnEMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_PROVIDER_B_PROVIDERS_PRODUCT", Storage="_B_PROVIDERS_PRODUCTs", ThisKey="IdProvider", OtherKey="IdProvider")]
		public EntitySet<B_PROVIDERS_PRODUCT> B_PROVIDERS_PRODUCTs
		{
			get
			{
				return this._B_PROVIDERS_PRODUCTs;
			}
			set
			{
				this._B_PROVIDERS_PRODUCTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_B_PROVIDERS_PRODUCTs(B_PROVIDERS_PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.B_PROVIDER = this;
		}
		
		private void detach_B_PROVIDERS_PRODUCTs(B_PROVIDERS_PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.B_PROVIDER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.B_PROVIDERS_PRODUCTS")]
	public partial class B_PROVIDERS_PRODUCT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdProvider;
		
		private int _IdProduct;
		
		private EntityRef<B_PRODUCT> _B_PRODUCT;
		
		private EntityRef<B_PROVIDER> _B_PROVIDER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdProviderChanging(int value);
    partial void OnIdProviderChanged();
    partial void OnIdProductChanging(int value);
    partial void OnIdProductChanged();
    #endregion
		
		public B_PROVIDERS_PRODUCT()
		{
			this._B_PRODUCT = default(EntityRef<B_PRODUCT>);
			this._B_PROVIDER = default(EntityRef<B_PROVIDER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProvider", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdProvider
		{
			get
			{
				return this._IdProvider;
			}
			set
			{
				if ((this._IdProvider != value))
				{
					if (this._B_PROVIDER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdProviderChanging(value);
					this.SendPropertyChanging();
					this._IdProvider = value;
					this.SendPropertyChanged("IdProvider");
					this.OnIdProviderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProduct", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdProduct
		{
			get
			{
				return this._IdProduct;
			}
			set
			{
				if ((this._IdProduct != value))
				{
					if (this._B_PRODUCT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdProductChanging(value);
					this.SendPropertyChanging();
					this._IdProduct = value;
					this.SendPropertyChanged("IdProduct");
					this.OnIdProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_PRODUCT_B_PROVIDERS_PRODUCT", Storage="_B_PRODUCT", ThisKey="IdProduct", OtherKey="IdProduct", IsForeignKey=true)]
		public B_PRODUCT B_PRODUCT
		{
			get
			{
				return this._B_PRODUCT.Entity;
			}
			set
			{
				B_PRODUCT previousValue = this._B_PRODUCT.Entity;
				if (((previousValue != value) 
							|| (this._B_PRODUCT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._B_PRODUCT.Entity = null;
						previousValue.B_PROVIDERS_PRODUCTs.Remove(this);
					}
					this._B_PRODUCT.Entity = value;
					if ((value != null))
					{
						value.B_PROVIDERS_PRODUCTs.Add(this);
						this._IdProduct = value.IdProduct;
					}
					else
					{
						this._IdProduct = default(int);
					}
					this.SendPropertyChanged("B_PRODUCT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="B_PROVIDER_B_PROVIDERS_PRODUCT", Storage="_B_PROVIDER", ThisKey="IdProvider", OtherKey="IdProvider", IsForeignKey=true)]
		public B_PROVIDER B_PROVIDER
		{
			get
			{
				return this._B_PROVIDER.Entity;
			}
			set
			{
				B_PROVIDER previousValue = this._B_PROVIDER.Entity;
				if (((previousValue != value) 
							|| (this._B_PROVIDER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._B_PROVIDER.Entity = null;
						previousValue.B_PROVIDERS_PRODUCTs.Remove(this);
					}
					this._B_PROVIDER.Entity = value;
					if ((value != null))
					{
						value.B_PROVIDERS_PRODUCTs.Add(this);
						this._IdProvider = value.IdProvider;
					}
					else
					{
						this._IdProvider = default(int);
					}
					this.SendPropertyChanged("B_PROVIDER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class B_SALE_DATA
	{
		
		private B_SALE _Sale;
		
		private B_CUSTOMER _Customer;
		
		private B_PRODUCT _Product;
		
		public B_SALE_DATA()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sale", CanBeNull=false)]
		public B_SALE Sale
		{
			get
			{
				return this._Sale;
			}
			set
			{
				if ((this._Sale != value))
				{
					this._Sale = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer", CanBeNull=false)]
		public B_CUSTOMER Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					this._Customer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product", CanBeNull=false)]
		public B_PRODUCT Product
		{
			get
			{
				return this._Product;
			}
			set
			{
				if ((this._Product != value))
				{
					this._Product = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
